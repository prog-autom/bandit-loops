
# This set ups the parameter grid search
# grid: specified parameters and a list of values
# results: what attributes of the experiment class include into results file
# bandit_model, bandit_name, experiment, init_random_state are links to user code
# folder: where to place the results
# run_times: this many times repeat for each parameters tuple
# random_seed: use this random seed
# grid_filter: a link to user function that returns True if a given parameter combination should be skipped
#

common_pipeline: &common_pipeline
  init_interest: !function src/mathmodel.BanditNoiseLoopModel.interest_init
  experiment: !function src/experiment.BanditLoopExperiment
  init_random_state: !function src/experiment.init_random_state
  grid_filter: !function src/experiment.skip_params

functions:
  random: &random_model !function src/bandits.random_model
  greedy: &epsilon_greedy_model !function src/bandits.epsilon_greedy_model
  ts: &ts_model !function src/bandits.ts_model
  optimal: &optimal_model !function src/bandits.optimal_model


grid_base: &grid_base
  name: explore_params
  results:
    interest: "User interests"
    loop_amp: '\abs(\mu^t - \mu^0)'
  run_times: 10
  random_seed: "${env.RANDOMSEED}"
  folder: "${env.TARGETFOLDER}/${self.name}"


# T is the number of steps in MAB
# w is the additive noise range [-w, w]
# l is the number of levers to draw
# M is the total number of levers (items)

grid_analysis: &grid_analysis !ExploreParams
  <<: *grid_base
  name: ts_grid
  grid: &base_grid
    w: [0.0, 0.3, 1, 3, 5, 10]
    M: [1,2,3,4,5,6,7,8,9,10]
    l: [1,2,3,4,5,6,7,8,9,10]
    T: [2000]
  pipeline:
    <<: *common_pipeline
    bandit_model: *ts_model


big_grid_analysis: &big_grid_analysis !ExploreParams
  <<: *grid_base
  name: ts_big_grid
  grid:
    w: [0.0, 0.3, 1, 3, 5, 10]
    M: [4,10,50,75,100]
    l: [1,4,10,50,75,100]
    T: [2000]
  pipeline:
    <<: *common_pipeline
    bandit_model: *ts_model

compare_grid_base: &compare_grid !ExploreParams
  <<: *grid_base
  grid: &grid_compare
    w: [3.0]
    M: [1,2,3,4,5,6,7,8,9,10]
    l: [1,2,3,4,5,6,7,8,9,10]
    T: [2000]


big_grid_pipeline: !GenericPipeline
  runs:
    - *big_grid_analysis

grid_pipeline: !GenericPipeline
  runs:
    - *grid_analysis
    - *big_grid_analysis
    
    
compare_pipeline: !GenericPipeline
  runs:
    - !ExploreParams
      <<: *compare_grid
      name: random
      pipeline:
        <<: *common_pipeline
        bandit_model: *random_model
    - !ExploreParams
      <<: *compare_grid
      name: optimal
      pipeline:
        <<: *common_pipeline
        bandit_model: *optimal_model
    - !ExploreParams
      <<: *compare_grid
      name: greedy
      grid:
        <<: *grid_compare
        epsilon: [0.1, 0.01]
      pipeline:
        <<: *common_pipeline
        bandit_model: *epsilon_greedy_model
    - !ExploreParams
      <<: *compare_grid
      name: ts
      pipeline:
        <<: *common_pipeline
        bandit_model: *ts_model


#
# Evaluate WinstreamLoopExperiment over parameters grid
# Models:
# - !function src/bandits.ts_model
# - !function src/bandits.optimal_model
# - !function src/bandits.epsilon_greedy_model
# - !function src/bandits.random_model
#


# T is the number of steps in MAB
# w is the additive noise range [-w, w]
# l is the number of levers to draw
# M is the total number of levers (items)
# b is the strength of the streak

winstreak_base: &winstreak_base
  <<: *grid_base
  grid:
    w: [0]
    M: [1,2,3,4,5,6,7,8,9,10]
    l: [1,2,3,4,5,6,7,8,9,10]
    b: [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
    T: [2000]
    epsilon: [0.1]
  run_times: 3
  pipeline: &winstreak_pipeline
    <<: *common_pipeline
    experiment: !function src/experiment.WinStreakLoopExperiment
  folder: "${env.TARGETFOLDER}/winstreak"

winstreak: !GenericPipeline
  runs:
    - !ExploreParams
      <<: *winstreak_base
      name: winstreak_grid_ts
      pipeline:
        <<: *winstreak_pipeline
        bandit_model: *ts_model

    - !ExploreParams
      <<: *winstreak_base
      name: winstreak_grid_optimal
      pipeline:
        <<: *winstreak_pipeline
        bandit_model: *optimal_model

    - !ExploreParams
      <<: *winstreak_base
      name: winstreak_grid_epsilon_greedy
      pipeline:
        <<: *winstreak_pipeline
        bandit_model: *epsilon_greedy_model

    - !ExploreParams
      <<: *winstreak_base
      name: winstreak_grid_random
      pipeline:
        <<: *winstreak_pipeline
        bandit_model: *random_model


#
# Evaluate RestartsLoopExperiment over parameters grid
# Models:
# - !function src/bandits.ts_model
# - !function src/bandits.optimal_model
# - !function src/bandits.epsilon_greedy_model
# - !function src/bandits.random_model
#

# T is the number of steps in MAB
# w is the additive noise range [-w, w]
# l is the number of levers to draw
# M is the total number of levers (items)
# r0 is a probability to forget
# s is a scaling parameter

# epsilon is exploration parameter for epsilon-greedy

restarts_base: &restarts_base
  <<: *grid_base
  grid:
    w: [0.]
    M: [10]
    l: [4]
    r0: [1.0, 0.3, 0.1, 0.01, 0.003, 0.001]
    s: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
    T: [5000]
    epsilon: [0.1]
  pipeline: &restarts_pipeline
    <<: *common_pipeline
    experiment: !function src/experiment.RestartsLoopExperiment
  folder: "${env.TARGETFOLDER}/restarts"

restarts: !GenericPipeline
  runs:
    - !ExploreParams
      <<: *restarts_base
      name: restarts_grid_ts
      pipeline:
        <<: *restarts_pipeline
        bandit_model: *ts_model

    - !ExploreParams
      <<: *restarts_base
      name: restarts_grid_optimal
      pipeline:
        <<: *restarts_pipeline
        bandit_model: *optimal_model

    - !ExploreParams
      <<: *restarts_base
      name: restarts_grid_epsilon_greedy
      pipeline:
        <<: *restarts_pipeline
        bandit_model: *epsilon_greedy_model

    - !ExploreParams
      <<: *restarts_base
      name: restarts_grid_random
      pipeline:
        <<: *restarts_pipeline
        bandit_model: *random_model


restarts_params: !GenericPipeline
  runs:
    - !ExploreParams
      <<: *restarts_base
      name: restarts_params_optimal
      grid:
        w: [0.]
        M: [10]
        l: [1]
        r0: [0.001]
        s: [0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
        T: [40000]
      pipeline:
        <<: *restarts_pipeline
        bandit_model: *optimal_model
